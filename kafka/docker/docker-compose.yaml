version: '3'

services:
  order-db:
    image: postgres:11.9
    volumes:
      - order-db-data:/var/lib/postgresql/data/
    networks:
      - kafka
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=1234
    ports:
      - 5432:5432

  order:
    build:
      context: ../mm-kafka-order/.
      dockerfile: ./src/main/docker/Dockerfile.multistage.jvm
    ports:
      - 8080:8080
      - 5005:5005
    networks:
      - kafka
    depends_on:
      - order-db
      - kafka
    environment:
      - JAVA_ENABLE_DEBUG=true
      - QUARKUS_HTTP_PORT=8080
      - QUARKUS_DATASOURCE_JDBC_URL=jdbc:postgresql://order-db:5432/admin
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092

  stock-db:
    image: postgres:11.9
    volumes:
      - stock-db-data:/var/lib/postgresql/data/
    networks:
      - kafka
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=1234
    ports:
      - 5433:5432

  stock:
    build:
      context: ../mm-kafka-stock/.
      dockerfile: ./src/main/docker/Dockerfile.multistage.jvm
    ports:
      - 5006:5005
      - 8081:8080
    networks:
      - kafka
    depends_on:
      - stock-db
      - kafka
    environment:
      - JAVA_ENABLE_DEBUG=true
      - QUARKUS_HTTP_PORT=8080
      - QUARKUS_DATASOURCE_JDBC_URL=jdbc:postgresql://stock-db:5432/admin
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092

  zookeeper:
    image: strimzi/kafka:0.20.0-kafka-2.6.0
    command: [
        "sh", "-c",
        "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    networks:
      - kafka
    ports:
      - "2181:2181"
    environment:
      LOG_DIR: /tmp/logs

  kafka:
    hostname: kafka
    image: strimzi/kafka:0.20.0-kafka-2.6.0
    command: [
        "sh", "-c",
        "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
    ]
    depends_on:
      - zookeeper
    networks:
      - kafka
    ports:
      - "9092:9092"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

  grafana:
    image: grafana/grafana:7.3.3
    ports:
      - 3000:3000
    networks:
      - kafka
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./config/grafana/dashboards/:/opt/dashboards
      - ./config/grafana/custom.yaml:/etc/grafana/provisioning/dashboards/custom.yaml
      - ./config/grafana/datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml

  prometheus:
    image: prom/prometheus:v2.22.2
    ports:
      - 9090:9090
    networks:
      - kafka
    volumes:
      - ./config/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yml
      - ./config/prometheus/alert.rules:/etc/prometheus/alert.rules

  alertmanager:
    image: prom/alertmanager:v0.21.0
    ports:
      - 9093:9093
    networks:
      - kafka
    volumes:
      - ./config/alertmanager/alertmanager.yaml:/etc/alertmanager/alertmanager.yml

  jaeger:
    image: jaegertracing/all-in-one:1.21.0
    networks:
      - kafka
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 14268:14268
      - 16686:16686

  viewer:
    image: puzzle/mm-kafka-viewer:latest
    ports:
      - 8082:8080
    networks:
      - kafka
    depends_on:
      - kafka
    environment:
      - QUARKUS_HTTP_PORT=8080

volumes:
  order-db-data:
  stock-db-data:

networks:
  kafka:
    driver: bridge
    ipam:
      driver: default
